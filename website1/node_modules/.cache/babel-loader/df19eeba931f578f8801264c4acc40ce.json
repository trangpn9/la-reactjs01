{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport translation_vn from \"../public/locales/vn/translation.json\";\nimport common_en from \"../public/locales/vn/translation.json\";\ni18n // load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  lng: 'en',\n  fallbackLng: 'en',\n  debug: true,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  resources: {\n    en: {\n      common: common_en // 'common' is our custom namespace\n\n    },\n    de: {\n      common: translation_vn\n    }\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["D:\\xampp\\htdocs\\la-reactjs\\website1\\src\\i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","translation_vn","common_en","use","init","lng","fallbackLng","debug","interpolation","escapeValue","resources","en","common","de"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AAEAL,IAAI,CACF;AACA;AAFE,CAGDM,GAHH,CAGOL,OAHP,EAIE;AACA;AALF,CAMGK,GANH,CAMOJ,gBANP,EAOE;AAPF,CAQGI,GARH,CAQOH,gBARP,EASE;AACA;AAVF,CAWGI,IAXH,CAWQ;AACJC,EAAAA,GAAG,EAAE,IADD;AAEJC,EAAAA,WAAW,EAAE,IAFT;AAGJC,EAAAA,KAAK,EAAE,IAHH;AAKJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GALX;AASJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACAC,MAAAA,MAAM,EAAEV,SADR,CACgC;;AADhC,KADK;AAITW,IAAAA,EAAE,EAAE;AACAD,MAAAA,MAAM,EAAEX;AADR;AAJK;AATP,CAXR;AA8BA,eAAeJ,IAAf","sourcesContent":["import i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport translation_vn from \"../public/locales/vn/translation.json\";\r\nimport common_en from \"../public/locales/vn/translation.json\";\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    lng: 'en',\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n\r\n    resources: {\r\n      en: {\r\n          common: common_en               // 'common' is our custom namespace\r\n      },\r\n      de: {\r\n          common: translation_vn\r\n      },\r\n    },\r\n  });\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}